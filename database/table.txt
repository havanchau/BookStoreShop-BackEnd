CREATE TABLE branchs ( id VARCHAR(20) PRIMARY KEY NOT NULL, branchName VARCHAR(50) NOT NULL, branchHotline VARCHAR(11) NOT NULL, branchNumberOfStreet VARCHAR(50), branchDistrict VARCHAR(50), branchCity VARCHAR(50) NOT NULL );

CREATE TABLE books ( isbn VARCHAR(20) PRIMARY KEY NOT NULL, title VARCHAR(200) NOT NULL, author VARCHAR(200) NOT NULL, publisher VARCHAR(200) NOT NULL, discount FLOAT, editionBook INT, cost FLOAT NOT NULL, ageRequirement INT );

CREATE TABLE users ( id VARCHAR(20) PRIMARY KEY NOT NULL, age INT, userPassword VARCHAR(30) NOT NULL, email VARCHAR(30) NOT NULL, userRole VARCHAR(10) NOT NULL, verified BIT );

CREATE TABLE employees ( id VARCHAR(20) PRIMARY KEY NOT NULL, employeeName VARCHAR(20), phone VARCHAR(11) NOT NULL, startDate DATE NOT NULL, employeeAddress VARCHAR(200) NOT NULL, salary FLOAT NOT NULL, idBranch VARCHAR(20) NOT NULL, numDayWorkOfMonth INT NOT NULL, userId VARCHAR(20) NOT NULL, FOREIGN KEY (idBranch) REFERENCES branchs(id)
ON UPDATE CASCADE
ON
DELETE CASCADE, FOREIGN KEY (userId) REFERENCES users(id)
ON UPDATE CASCADE
ON
DELETE CASCADE );

CREATE TABLE customers
(
	id VARCHAR(20) PRIMARY KEY NOT NULL,
    customerName VARCHAR(50) NOT NULL,
    physicalAddress VARCHAR(50),
    totalPayment FLOAT,
    userId VARCHAR(20) NOT NULL,
    FOREIGN KEY (userId) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE orders
(
	id VARCHAR(20) PRIMARY KEY NOT NULL,
    numberProduct INT NOT NULL,
    cost FLOAT NOT NULL,
    time_delivery DATE NOT NULL,
    customerId VARCHAR(20) NOT NULL,
    employeeId VARCHAR(20) NOT NULL,
    deliveryAddress VARCHAR(50),
    deliveryFee FLOAT,
    FOREIGN KEY (customerId) REFERENCES customers(id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (employeeId) REFERENCES employees(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE branchContainBooks ( idBranch VARCHAR(20) NOT NULL, isbn VARCHAR(20) NOT NULL, numberBook INT NOT NULL, PRIMARY KEY(idBranch, isbn), FOREIGN KEY (idBranch) REFERENCES branchs(id)
ON UPDATE CASCADE
ON
DELETE CASCADE, FOREIGN KEY (isbn) REFERENCES books(isbn)
ON UPDATE CASCADE
ON
DELETE CASCADE );

CREATE TABLE orderContainBooks ( idOrder VARCHAR(20), isbn VARCHAR(20), numberBook INT, PRIMARY KEY (idOrder, isbn), FOREIGN KEY (idOrder) REFERENCES orders(id)
ON UPDATE CASCADE
ON
DELETE CASCADE, FOREIGN KEY (isbn) REFERENCES books(isbn)
ON UPDATE CASCADE
ON
DELETE CASCADE );

CREATE TABLE packages ( id VARCHAR(20) PRIMARY KEY NOT NULL, packageRoute VARCHAR(200) NOT NULL, releaseTime DATE NOT NULL, idOrder VARCHAR(20) NOT NULL, FOREIGN KEY (idOrder) REFERENCES orders(id)
ON UPDATE CASCADE
ON
DELETE CASCADE );

CREATE TABLE warehouses ( id VARCHAR(20) PRIMARY KEY NOT NULL, warehouseLocation VARCHAR(200) NOT NULL, numberPackages INT NOT NULL );

CREATE TABLE managers ( id VARCHAR(20) PRIMARY KEY NOT NULL, FOREIGN KEY (id) REFERENCES employees(id)
ON UPDATE CASCADE
ON
DELETE CASCADE );

CREATE TABLE warehouseStaffs ( id VARCHAR(20) PRIMARY KEY NOT NULL, idWarehouse VARCHAR(20) NOT NULL, timeStart DATE NOT NULL, timeEnd DATE, FOREIGN KEY (idWarehouse) REFERENCES warehouses(id)
ON UPDATE CASCADE
ON
DELETE CASCADE, FOREIGN KEY (id) REFERENCES employees(id)
ON UPDATE CASCADE
ON
DELETE CASCADE );

CREATE TABLE drivers ( id VARCHAR(20) NOT NULL, FOREIGN KEY (id) REFERENCES employees(id)
ON UPDATE CASCADE
ON
DELETE CASCADE, PRIMARY KEY (id) );

CREATE TABLE shippers ( id VARCHAR(20) NOT NULL, PRIMARY KEY (id), FOREIGN KEY (id) REFERENCES employees(id)
ON UPDATE CASCADE
ON
DELETE CASCADE );

CREATE TABLE salers ( id VARCHAR(20) NOT NULL, FOREIGN KEY (id) REFERENCES employees(id)
ON UPDATE CASCADE
ON
DELETE CASCADE, PRIMARY KEY (id) );

CREATE TABLE cargoTrucks ( id VARCHAR(20) PRIMARY KEY NOT NULL, vehicleType VARCHAR(30) NOT NULL );

CREATE TABLE transportDiversPackages ( idDriver VARCHAR(20) NOT NULL, idPackage VARCHAR(20) NOT NULL, timeDelivery DATE NOT NULL, routeDelivery VARCHAR(1024) NOT NULL, PRIMARY KEY (idDriver, idPackage), FOREIGN KEY (idDriver) REFERENCES drivers(id)
ON UPDATE CASCADE
ON
DELETE CASCADE, FOREIGN KEY (idPackage) REFERENCES packages(id)
ON UPDATE CASCADE
ON
DELETE CASCADE );

CREATE TABLE transportCargoPackages ( idCargo VARCHAR(20) NOT NULL, idPackage VARCHAR(20) NOT NULL, timeDelivery DATE NOT NULL, routeDelivery VARCHAR(300) NOT NULL, PRIMARY KEY (idCargo, idPackage), FOREIGN KEY (idCargo) REFERENCES cargoTrucks(id)
ON UPDATE CASCADE
ON
DELETE CASCADE, FOREIGN KEY (idPackage) REFERENCES packages(id)
ON UPDATE CASCADE
ON
DELETE CASCADE );

CREATE TABLE transportTos ( idWarehouse VARCHAR(20) NOT NULL, idPackage VARCHAR(20) NOT NULL, arrivalTime DATE NOT NULL, PRIMARY KEY (idWarehouse, idPackage), FOREIGN KEY (idWarehouse) REFERENCES warehouses(id)
ON UPDATE CASCADE
ON
DELETE CASCADE, FOREIGN KEY (idPackage) REFERENCES packages(id)
ON UPDATE CASCADE
ON
DELETE CASCADE );

CREATE TABLE transportFroms ( idWarehouse VARCHAR(20) NOT NULL, idPackage VARCHAR(20) NOT NULL, departureTime DATE NOT NULL, PRIMARY KEY (idWarehouse, idPackage), FOREIGN KEY (idWarehouse) REFERENCES warehouses(id)
ON UPDATE CASCADE
ON
DELETE CASCADE, FOREIGN KEY (idPackage) REFERENCES packages(id)
ON UPDATE CASCADE
ON
DELETE CASCADE );

CREATE TABLE getPackages ( idShipper VARCHAR(20) NOT NULL, idPackage VARCHAR(20) NOT NULL, timeGetPackage DATE NOT NULL, FOREIGN KEY (idShipper) REFERENCES shippers(id)
ON UPDATE CASCADE
ON
DELETE CASCADE, FOREIGN KEY (idPackage) REFERENCES packages(id)
ON UPDATE CASCADE
ON
DELETE CASCADE, PRIMARY KEY (idShipper, idPackage) );

CREATE TABLE shipPackageTo ( idShipper VARCHAR(20) NOT NULL, idCustomer VARCHAR(20) NOT NULL, timeShip DATE NOT NULL, FOREIGN KEY (idShipper) REFERENCES shippers(id)
ON UPDATE CASCADE
ON
DELETE CASCADE, FOREIGN KEY (idCustomer) REFERENCES customers(id)
ON UPDATE CASCADE
ON
DELETE CASCADE, PRIMARY KEY (idShipper, idCustomer) );

CREATE TABLE manageEmployees ( idEmployee VARCHAR(20) PRIMARY KEY, idSupervisor VARCHAR(20), FOREIGN KEY (idSupervisor) REFERENCES employees(id)
ON UPDATE CASCADE
ON
DELETE CASCADE, FOREIGN KEY (idEmployee) REFERENCES employees(id)
ON UPDATE CASCADE
ON
DELETE CASCADE );